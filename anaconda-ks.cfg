# Generated by Anaconda 41.35
# Generated by pykickstart v3.58
#version=DEVEL

# Keyboard layouts
keyboard --vckeymap=pl --xlayouts='pl'
# System language
lang pl_PL.UTF-8 --addsupport=en_US.UTF-8

# Network information
network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate

# Mirror to Fedora 41
url --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-41&arch=x86_64
repo --name=updates --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f41&arch=x86_64

%packages
@^server-product-environment
docker
curl
%end

# Run the Setup Agent on first boot
#firstboot --enable
firstboot --disable

# Generated using Blivet version 3.11.0
ignoredisk --only-use=sda
autopart

# Partition clearing information
#clearpart --none --initlabel
clearpart --all --initlabel

# System timezone
timezone Europe/Warsaw --utc

#Root password
rootpw --lock
user --groups=wheel --name=dk --password=$y$j9T$itVxhkHSDZzU7lpOpePXkLtb$OkDSrQVIABMa2AP2rOclTyaWp59ymJSQsWMehmLdrH6 --iscrypted --gecos="Dominik K"

#POST-install
%post --log=/root/ks-post.log --erroronfail
echo ">>> Starting %post script..."

# Upewnij się, że Docker startuje przy boocie
systemctl enable docker.service

# Stałe
APP_DIR="/opt/build_artifact"
WHEEL_URL="https://raw.githubusercontent.com/TinyCabin/pytest-examples-fork/refs/heads/main/pytest_examples-0.0.18-py3-none-any.whl"
DOCKER_IMAGE_NAME="artifact_image"
DOCKER_CONTAINER_NAME="artifact_container"

echo ">>> Tworzenie katalogu ${APP_DIR}"
mkdir -p "${APP_DIR}"

# --- Tworzymy build_and_run_artifact.sh ---
cat << EOF > ${APP_DIR}/build_and_run_artifact.sh
#!/usr/bin/env bash
set -euxo pipefail

cd "${APP_DIR}"

# Pobierz artifact.whl
curl -fL -o artifact.whl "${WHEEL_URL}"

# Tworzenie Dockerfile
cat << EOD > Dockerfile
FROM python:3.11-slim
COPY artifact.whl /packages/
RUN pip install /packages/artifact.whl
CMD ["python3", "-c", "import pytest_examples, os, sys; print('Running version', pytest_examples.__version__)"]
EOD

# Stop & remove old container if exists
docker stop ${DOCKER_CONTAINER_NAME} || true
docker rm ${DOCKER_CONTAINER_NAME} || true

# Build image
docker build -t ${DOCKER_IMAGE_NAME} .

# Run container
docker run -d --name ${DOCKER_CONTAINER_NAME} --restart=always ${DOCKER_IMAGE_NAME}
EOF

chmod +x ${APP_DIR}/build_and_run_artifact.sh

# --- Tworzymy systemd service ---
cat << EOF > /etc/systemd/system/artifact.service
[Unit]
Description=Build and run artifact_image from .whl
Requires=docker.service
After=docker.service network-online.target
Wants=network-online.target

[Service]
Type=oneshot
ExecStart=${APP_DIR}/build_and_run_artifact.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

echo ">>> Reloading systemd daemons..."
systemctl daemon-reload
systemctl enable artifact.service

echo ">>> %post script finished."
%end


reboot
