# Generated by Anaconda 41.35
# Generated by pykickstart v3.58
#version=DEVEL

# Keyboard layouts
keyboard --vckeymap=pl --xlayouts='pl'
# System language
lang pl_PL.UTF-8 --addsupport=en_US.UTF-8

# Network information
network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate

# Mirror to Fedora 41
url --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-41&arch=x86_64
repo --name=updates --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f41&arch=x86_64

%packages
@^server-product-environment
docker
curl
%end

# Run the Setup Agent on first boot
firstboot --enable

# Generated using Blivet version 3.11.0
ignoredisk --only-use=sda
autopart

# Partition clearing information
#clearpart --none --initlabel
clearpart --all --initlabel

# System timezone
timezone Europe/Warsaw --utc

#Root password
rootpw --lock
user --groups=wheel --name=dk --password=$y$j9T$itVxhkHSDZzU7lpOpePXkLtb$OkDSrQVIABMa2AP2rOclTyaWp59ymJSQsWMehmLdrH6 --iscrypted --gecos="Dominik K"


%post --log=/root/ks-post.log

# Zmienne
WHEEL_URL="https://github.com/TinyCabin/pytest-examples-fork/blob/main/pytest_examples-0.0.18-py3-none-any.whl"

# Instalacja i uruchomienie dockera
systemctl enable docker

# katalog roboczy
mkdir -p /opt/deploy_whl
cd /opt/deploy_whl

# Pobierz plik wheel
curl "$WHEEL_URL" -O artifact.whl

#  Dockerfile 
cat > Dockerfile <<EOF
FROM python:3.11-slim
COPY artifact.whl /packages/
RUN pip install /packages/artifact.whl
CMD ["python3", "-c", "import pytest_examples; print(pytest_examples.__version__)"]
EOF

# Build obrazu 
docker build -t artifact_image .
docker run --rm artifact_image

# Skrypt do uruchamiania kontenera po starcie systemu
cat > /opt/deploy_whl/run-container.sh <<EOF
#!/bin/bash
docker run -d --restart=always --name artifact_container artifact_image
EOF

chmod +x /opt/deploy_whl/run-container.sh


cat > /etc/systemd/system/artifact.service <<EOF
[Unit]
Description=Artifact Container
Requires=docker.service
After=docker.service

[Service]
ExecStart=/opt/deploy_whl/run-container.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

systemctl enable artifact.service

%end
